/* soapH.h
   Generated by gSOAP 2.8.4 from servicedescription.h

Copyright(C) 2000-2011, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
1) GPL or 2) Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapH_H
#define soapH_H
#include "soapStub.h"
#ifndef WITH_NOIDREF

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);
SOAP_FMAC3 void *SOAP_FMAC4 soap_getelement(struct soap*, int*);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);

SOAP_FMAC3 void * SOAP_FMAC4 soap_instantiate(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 int SOAP_FMAC4 soap_fdelete(struct soap_clist*);
SOAP_FMAC3 void* SOAP_FMAC4 soap_class_id_enter(struct soap*, const char*, void*, int, size_t, const char*, const char*);

SOAP_FMAC3 void* SOAP_FMAC4 soap_container_id_forward(struct soap*, const char*, void*, size_t, int, int, size_t, unsigned int);

SOAP_FMAC3 void SOAP_FMAC4 soap_container_insert(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_byte
#define SOAP_TYPE_byte (3)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_byte(struct soap*, char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);

#ifndef soap_write_byte
#define soap_write_byte(soap, data) ( soap_begin_send(soap) || soap_put_byte(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, const char *, const char*, const char*);

#ifndef soap_read_byte
#define soap_read_byte(soap, data) ( soap_begin_recv(soap) || !soap_get_byte(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);

#ifndef SOAP_TYPE_int
#define SOAP_TYPE_int (1)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_int(struct soap*, int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);

#ifndef soap_write_int
#define soap_write_int(soap, data) ( soap_begin_send(soap) || soap_put_int(soap, data, "int", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, const int *, const char*, const char*);

#ifndef soap_read_int
#define soap_read_int(soap, data) ( soap_begin_recv(soap) || !soap_get_int(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);

#ifndef SOAP_TYPE_double
#define SOAP_TYPE_double (11)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_double(struct soap*, double *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_double(struct soap*, const char*, int, const double *, const char*);
SOAP_FMAC3 double * SOAP_FMAC4 soap_in_double(struct soap*, const char*, double *, const char*);

#ifndef soap_write_double
#define soap_write_double(soap, data) ( soap_begin_send(soap) || soap_put_double(soap, data, "double", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_double(struct soap*, const double *, const char*, const char*);

#ifndef soap_read_double
#define soap_read_double(soap, data) ( soap_begin_recv(soap) || !soap_get_double(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 double * SOAP_FMAC4 soap_get_double(struct soap*, double *, const char*, const char*);

#ifndef SOAP_TYPE_std__string
#define SOAP_TYPE_std__string (50)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__string(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__string(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__string(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_std__string(struct soap*, const char*, std::string*, const char*);

#ifndef soap_write_std__string
#define soap_write_std__string(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "string", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_std__string(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_read_std__string
#define soap_read_std__string(soap, data) ( soap_begin_recv(soap) || !soap_get_std__string(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_std__string(struct soap*, std::string *, const char*, const char*);

#define soap_new_std__string(soap, n) soap_instantiate_std__string(soap, n, NULL, NULL, NULL)


#define soap_delete_std__string(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::string * SOAP_FMAC2 soap_instantiate_std__string(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__string(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_GameList
#define SOAP_TYPE_GameList (25)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_GameList(struct soap*, const char*, int, const GameList *, const char*);
SOAP_FMAC3 GameList * SOAP_FMAC4 soap_in_GameList(struct soap*, const char*, GameList *, const char*);

#ifndef soap_write_GameList
#define soap_write_GameList(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "GameList", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_GameList
#define soap_read_GameList(soap, data) ( soap_begin_recv(soap) || !soap_get_GameList(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 GameList * SOAP_FMAC4 soap_get_GameList(struct soap*, GameList *, const char*, const char*);

#define soap_new_GameList(soap, n) soap_instantiate_GameList(soap, n, NULL, NULL, NULL)


#define soap_delete_GameList(soap, p) soap_delete(soap, p)

SOAP_FMAC1 GameList * SOAP_FMAC2 soap_instantiate_GameList(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_GameList(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_GameInformation
#define SOAP_TYPE_GameInformation (24)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_GameInformation(struct soap*, const char*, int, const GameInformation *, const char*);
SOAP_FMAC3 GameInformation * SOAP_FMAC4 soap_in_GameInformation(struct soap*, const char*, GameInformation *, const char*);

#ifndef soap_write_GameInformation
#define soap_write_GameInformation(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "GameInformation", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_GameInformation
#define soap_read_GameInformation(soap, data) ( soap_begin_recv(soap) || !soap_get_GameInformation(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 GameInformation * SOAP_FMAC4 soap_get_GameInformation(struct soap*, GameInformation *, const char*, const char*);

#define soap_new_GameInformation(soap, n) soap_instantiate_GameInformation(soap, n, NULL, NULL, NULL)


#define soap_delete_GameInformation(soap, p) soap_delete(soap, p)

SOAP_FMAC1 GameInformation * SOAP_FMAC2 soap_instantiate_GameInformation(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_GameInformation(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_PlaceList
#define SOAP_TYPE_PlaceList (22)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PlaceList(struct soap*, const char*, int, const PlaceList *, const char*);
SOAP_FMAC3 PlaceList * SOAP_FMAC4 soap_in_PlaceList(struct soap*, const char*, PlaceList *, const char*);

#ifndef soap_write_PlaceList
#define soap_write_PlaceList(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "PlaceList", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_PlaceList
#define soap_read_PlaceList(soap, data) ( soap_begin_recv(soap) || !soap_get_PlaceList(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 PlaceList * SOAP_FMAC4 soap_get_PlaceList(struct soap*, PlaceList *, const char*, const char*);

#define soap_new_PlaceList(soap, n) soap_instantiate_PlaceList(soap, n, NULL, NULL, NULL)


#define soap_delete_PlaceList(soap, p) soap_delete(soap, p)

SOAP_FMAC1 PlaceList * SOAP_FMAC2 soap_instantiate_PlaceList(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_PlaceList(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_PlaceInformation
#define SOAP_TYPE_PlaceInformation (20)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PlaceInformation(struct soap*, const char*, int, const PlaceInformation *, const char*);
SOAP_FMAC3 PlaceInformation * SOAP_FMAC4 soap_in_PlaceInformation(struct soap*, const char*, PlaceInformation *, const char*);

#ifndef soap_write_PlaceInformation
#define soap_write_PlaceInformation(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "PlaceInformation", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_PlaceInformation
#define soap_read_PlaceInformation(soap, data) ( soap_begin_recv(soap) || !soap_get_PlaceInformation(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 PlaceInformation * SOAP_FMAC4 soap_get_PlaceInformation(struct soap*, PlaceInformation *, const char*, const char*);

#define soap_new_PlaceInformation(soap, n) soap_instantiate_PlaceInformation(soap, n, NULL, NULL, NULL)


#define soap_delete_PlaceInformation(soap, p) soap_delete(soap, p)

SOAP_FMAC1 PlaceInformation * SOAP_FMAC2 soap_instantiate_PlaceInformation(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_PlaceInformation(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_DrinkList
#define SOAP_TYPE_DrinkList (18)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_DrinkList(struct soap*, const char*, int, const DrinkList *, const char*);
SOAP_FMAC3 DrinkList * SOAP_FMAC4 soap_in_DrinkList(struct soap*, const char*, DrinkList *, const char*);

#ifndef soap_write_DrinkList
#define soap_write_DrinkList(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "DrinkList", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_DrinkList
#define soap_read_DrinkList(soap, data) ( soap_begin_recv(soap) || !soap_get_DrinkList(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 DrinkList * SOAP_FMAC4 soap_get_DrinkList(struct soap*, DrinkList *, const char*, const char*);

#define soap_new_DrinkList(soap, n) soap_instantiate_DrinkList(soap, n, NULL, NULL, NULL)


#define soap_delete_DrinkList(soap, p) soap_delete(soap, p)

SOAP_FMAC1 DrinkList * SOAP_FMAC2 soap_instantiate_DrinkList(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_DrinkList(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_DrinkInformation
#define SOAP_TYPE_DrinkInformation (17)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_DrinkInformation(struct soap*, const char*, int, const DrinkInformation *, const char*);
SOAP_FMAC3 DrinkInformation * SOAP_FMAC4 soap_in_DrinkInformation(struct soap*, const char*, DrinkInformation *, const char*);

#ifndef soap_write_DrinkInformation
#define soap_write_DrinkInformation(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "DrinkInformation", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_DrinkInformation
#define soap_read_DrinkInformation(soap, data) ( soap_begin_recv(soap) || !soap_get_DrinkInformation(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 DrinkInformation * SOAP_FMAC4 soap_get_DrinkInformation(struct soap*, DrinkInformation *, const char*, const char*);

#define soap_new_DrinkInformation(soap, n) soap_instantiate_DrinkInformation(soap, n, NULL, NULL, NULL)


#define soap_delete_DrinkInformation(soap, p) soap_delete(soap, p)

SOAP_FMAC1 DrinkInformation * SOAP_FMAC2 soap_instantiate_DrinkInformation(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_DrinkInformation(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_PlayerList
#define SOAP_TYPE_PlayerList (15)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PlayerList(struct soap*, const char*, int, const PlayerList *, const char*);
SOAP_FMAC3 PlayerList * SOAP_FMAC4 soap_in_PlayerList(struct soap*, const char*, PlayerList *, const char*);

#ifndef soap_write_PlayerList
#define soap_write_PlayerList(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "PlayerList", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_PlayerList
#define soap_read_PlayerList(soap, data) ( soap_begin_recv(soap) || !soap_get_PlayerList(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 PlayerList * SOAP_FMAC4 soap_get_PlayerList(struct soap*, PlayerList *, const char*, const char*);

#define soap_new_PlayerList(soap, n) soap_instantiate_PlayerList(soap, n, NULL, NULL, NULL)


#define soap_delete_PlayerList(soap, p) soap_delete(soap, p)

SOAP_FMAC1 PlayerList * SOAP_FMAC2 soap_instantiate_PlayerList(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_PlayerList(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_PlayerInformation
#define SOAP_TYPE_PlayerInformation (12)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_PlayerInformation(struct soap*, const char*, int, const PlayerInformation *, const char*);
SOAP_FMAC3 PlayerInformation * SOAP_FMAC4 soap_in_PlayerInformation(struct soap*, const char*, PlayerInformation *, const char*);

#ifndef soap_write_PlayerInformation
#define soap_write_PlayerInformation(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "PlayerInformation", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_PlayerInformation
#define soap_read_PlayerInformation(soap, data) ( soap_begin_recv(soap) || !soap_get_PlayerInformation(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 PlayerInformation * SOAP_FMAC4 soap_get_PlayerInformation(struct soap*, PlayerInformation *, const char*, const char*);

#define soap_new_PlayerInformation(soap, n) soap_instantiate_PlayerInformation(soap, n, NULL, NULL, NULL)


#define soap_delete_PlayerInformation(soap, p) soap_delete(soap, p)

SOAP_FMAC1 PlayerInformation * SOAP_FMAC2 soap_instantiate_PlayerInformation(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_PlayerInformation(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_StringDoublePair
#define SOAP_TYPE_StringDoublePair (10)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_StringDoublePair(struct soap*, const char*, int, const StringDoublePair *, const char*);
SOAP_FMAC3 StringDoublePair * SOAP_FMAC4 soap_in_StringDoublePair(struct soap*, const char*, StringDoublePair *, const char*);

#ifndef soap_write_StringDoublePair
#define soap_write_StringDoublePair(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "StringDoublePair", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_StringDoublePair
#define soap_read_StringDoublePair(soap, data) ( soap_begin_recv(soap) || !soap_get_StringDoublePair(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 StringDoublePair * SOAP_FMAC4 soap_get_StringDoublePair(struct soap*, StringDoublePair *, const char*, const char*);

#define soap_new_StringDoublePair(soap, n) soap_instantiate_StringDoublePair(soap, n, NULL, NULL, NULL)


#define soap_delete_StringDoublePair(soap, p) soap_delete(soap, p)

SOAP_FMAC1 StringDoublePair * SOAP_FMAC2 soap_instantiate_StringDoublePair(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_StringDoublePair(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_StringIntPair
#define SOAP_TYPE_StringIntPair (9)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_StringIntPair(struct soap*, const char*, int, const StringIntPair *, const char*);
SOAP_FMAC3 StringIntPair * SOAP_FMAC4 soap_in_StringIntPair(struct soap*, const char*, StringIntPair *, const char*);

#ifndef soap_write_StringIntPair
#define soap_write_StringIntPair(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "StringIntPair", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_StringIntPair
#define soap_read_StringIntPair(soap, data) ( soap_begin_recv(soap) || !soap_get_StringIntPair(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 StringIntPair * SOAP_FMAC4 soap_get_StringIntPair(struct soap*, StringIntPair *, const char*, const char*);

#define soap_new_StringIntPair(soap, n) soap_instantiate_StringIntPair(soap, n, NULL, NULL, NULL)


#define soap_delete_StringIntPair(soap, p) soap_delete(soap, p)

SOAP_FMAC1 StringIntPair * SOAP_FMAC2 soap_instantiate_StringIntPair(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_StringIntPair(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (62)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);

#ifndef soap_write_SOAP_ENV__Fault
#define soap_write_SOAP_ENV__Fault(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Fault(soap, data), 0) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Fault
#define soap_read_SOAP_ENV__Fault(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Fault(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);

#define soap_new_SOAP_ENV__Fault(soap, n) soap_instantiate_SOAP_ENV__Fault(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Fault(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Fault * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Fault(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Fault(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (61)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap*, const char*, int, const struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason *, const char*);

#ifndef soap_write_SOAP_ENV__Reason
#define soap_write_SOAP_ENV__Reason(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Reason(soap, data), 0) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Reason
#define soap_read_SOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *, const char*, const char*);

#define soap_new_SOAP_ENV__Reason(soap, n) soap_instantiate_SOAP_ENV__Reason(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Reason(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Reason * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Reason(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Reason(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (58)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap*, const char*, int, const struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail *, const char*);

#ifndef soap_write_SOAP_ENV__Detail
#define soap_write_SOAP_ENV__Detail(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Detail(soap, data), 0) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Detail
#define soap_read_SOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *, const char*, const char*);

#define soap_new_SOAP_ENV__Detail(soap, n) soap_instantiate_SOAP_ENV__Detail(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Detail(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Detail * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Detail(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Detail(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (56)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);

#ifndef soap_write_SOAP_ENV__Code
#define soap_write_SOAP_ENV__Code(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Code(soap, data), 0) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Code
#define soap_read_SOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);

#define soap_new_SOAP_ENV__Code(soap, n) soap_instantiate_SOAP_ENV__Code(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Code(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Code * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Code(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Code(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (55)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);

#ifndef soap_write_SOAP_ENV__Header
#define soap_write_SOAP_ENV__Header(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Header(soap, data), 0) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Header
#define soap_read_SOAP_ENV__Header(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Header(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);

#define soap_new_SOAP_ENV__Header(soap, n) soap_instantiate_SOAP_ENV__Header(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Header(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Header * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Header(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Header(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef SOAP_TYPE_ps__addSchmeisserei
#define SOAP_TYPE_ps__addSchmeisserei (54)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ps__addSchmeisserei(struct soap*, struct ps__addSchmeisserei *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ps__addSchmeisserei(struct soap*, const struct ps__addSchmeisserei *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ps__addSchmeisserei(struct soap*, const char*, int, const struct ps__addSchmeisserei *, const char*);
SOAP_FMAC3 struct ps__addSchmeisserei * SOAP_FMAC4 soap_in_ps__addSchmeisserei(struct soap*, const char*, struct ps__addSchmeisserei *, const char*);

#ifndef soap_write_ps__addSchmeisserei
#define soap_write_ps__addSchmeisserei(soap, data) ( soap_begin_send(soap) || (soap_serialize_ps__addSchmeisserei(soap, data), 0) || soap_put_ps__addSchmeisserei(soap, data, "ps:addSchmeisserei", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ps__addSchmeisserei(struct soap*, const struct ps__addSchmeisserei *, const char*, const char*);

#ifndef soap_read_ps__addSchmeisserei
#define soap_read_ps__addSchmeisserei(soap, data) ( soap_begin_recv(soap) || !soap_get_ps__addSchmeisserei(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ps__addSchmeisserei * SOAP_FMAC4 soap_get_ps__addSchmeisserei(struct soap*, struct ps__addSchmeisserei *, const char*, const char*);

#define soap_new_ps__addSchmeisserei(soap, n) soap_instantiate_ps__addSchmeisserei(soap, n, NULL, NULL, NULL)


#define soap_delete_ps__addSchmeisserei(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ps__addSchmeisserei * SOAP_FMAC2 soap_instantiate_ps__addSchmeisserei(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ps__addSchmeisserei(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ps__addSchmeissereiResponse
#define SOAP_TYPE_ps__addSchmeissereiResponse (53)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ps__addSchmeissereiResponse(struct soap*, struct ps__addSchmeissereiResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ps__addSchmeissereiResponse(struct soap*, const struct ps__addSchmeissereiResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ps__addSchmeissereiResponse(struct soap*, const char*, int, const struct ps__addSchmeissereiResponse *, const char*);
SOAP_FMAC3 struct ps__addSchmeissereiResponse * SOAP_FMAC4 soap_in_ps__addSchmeissereiResponse(struct soap*, const char*, struct ps__addSchmeissereiResponse *, const char*);

#ifndef soap_write_ps__addSchmeissereiResponse
#define soap_write_ps__addSchmeissereiResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ps__addSchmeissereiResponse(soap, data), 0) || soap_put_ps__addSchmeissereiResponse(soap, data, "ps:addSchmeissereiResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ps__addSchmeissereiResponse(struct soap*, const struct ps__addSchmeissereiResponse *, const char*, const char*);

#ifndef soap_read_ps__addSchmeissereiResponse
#define soap_read_ps__addSchmeissereiResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ps__addSchmeissereiResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ps__addSchmeissereiResponse * SOAP_FMAC4 soap_get_ps__addSchmeissereiResponse(struct soap*, struct ps__addSchmeissereiResponse *, const char*, const char*);

#define soap_new_ps__addSchmeissereiResponse(soap, n) soap_instantiate_ps__addSchmeissereiResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ps__addSchmeissereiResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ps__addSchmeissereiResponse * SOAP_FMAC2 soap_instantiate_ps__addSchmeissereiResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ps__addSchmeissereiResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ps__gameCurrentPlayingPlayers
#define SOAP_TYPE_ps__gameCurrentPlayingPlayers (49)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ps__gameCurrentPlayingPlayers(struct soap*, struct ps__gameCurrentPlayingPlayers *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ps__gameCurrentPlayingPlayers(struct soap*, const struct ps__gameCurrentPlayingPlayers *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ps__gameCurrentPlayingPlayers(struct soap*, const char*, int, const struct ps__gameCurrentPlayingPlayers *, const char*);
SOAP_FMAC3 struct ps__gameCurrentPlayingPlayers * SOAP_FMAC4 soap_in_ps__gameCurrentPlayingPlayers(struct soap*, const char*, struct ps__gameCurrentPlayingPlayers *, const char*);

#ifndef soap_write_ps__gameCurrentPlayingPlayers
#define soap_write_ps__gameCurrentPlayingPlayers(soap, data) ( soap_begin_send(soap) || (soap_serialize_ps__gameCurrentPlayingPlayers(soap, data), 0) || soap_put_ps__gameCurrentPlayingPlayers(soap, data, "ps:gameCurrentPlayingPlayers", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ps__gameCurrentPlayingPlayers(struct soap*, const struct ps__gameCurrentPlayingPlayers *, const char*, const char*);

#ifndef soap_read_ps__gameCurrentPlayingPlayers
#define soap_read_ps__gameCurrentPlayingPlayers(soap, data) ( soap_begin_recv(soap) || !soap_get_ps__gameCurrentPlayingPlayers(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ps__gameCurrentPlayingPlayers * SOAP_FMAC4 soap_get_ps__gameCurrentPlayingPlayers(struct soap*, struct ps__gameCurrentPlayingPlayers *, const char*, const char*);

#define soap_new_ps__gameCurrentPlayingPlayers(soap, n) soap_instantiate_ps__gameCurrentPlayingPlayers(soap, n, NULL, NULL, NULL)


#define soap_delete_ps__gameCurrentPlayingPlayers(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ps__gameCurrentPlayingPlayers * SOAP_FMAC2 soap_instantiate_ps__gameCurrentPlayingPlayers(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ps__gameCurrentPlayingPlayers(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ps__gameCurrentPlayingPlayersResponse
#define SOAP_TYPE_ps__gameCurrentPlayingPlayersResponse (48)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ps__gameCurrentPlayingPlayersResponse(struct soap*, struct ps__gameCurrentPlayingPlayersResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ps__gameCurrentPlayingPlayersResponse(struct soap*, const struct ps__gameCurrentPlayingPlayersResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ps__gameCurrentPlayingPlayersResponse(struct soap*, const char*, int, const struct ps__gameCurrentPlayingPlayersResponse *, const char*);
SOAP_FMAC3 struct ps__gameCurrentPlayingPlayersResponse * SOAP_FMAC4 soap_in_ps__gameCurrentPlayingPlayersResponse(struct soap*, const char*, struct ps__gameCurrentPlayingPlayersResponse *, const char*);

#ifndef soap_write_ps__gameCurrentPlayingPlayersResponse
#define soap_write_ps__gameCurrentPlayingPlayersResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ps__gameCurrentPlayingPlayersResponse(soap, data), 0) || soap_put_ps__gameCurrentPlayingPlayersResponse(soap, data, "ps:gameCurrentPlayingPlayersResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ps__gameCurrentPlayingPlayersResponse(struct soap*, const struct ps__gameCurrentPlayingPlayersResponse *, const char*, const char*);

#ifndef soap_read_ps__gameCurrentPlayingPlayersResponse
#define soap_read_ps__gameCurrentPlayingPlayersResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ps__gameCurrentPlayingPlayersResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ps__gameCurrentPlayingPlayersResponse * SOAP_FMAC4 soap_get_ps__gameCurrentPlayingPlayersResponse(struct soap*, struct ps__gameCurrentPlayingPlayersResponse *, const char*, const char*);

#define soap_new_ps__gameCurrentPlayingPlayersResponse(soap, n) soap_instantiate_ps__gameCurrentPlayingPlayersResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ps__gameCurrentPlayingPlayersResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ps__gameCurrentPlayingPlayersResponse * SOAP_FMAC2 soap_instantiate_ps__gameCurrentPlayingPlayersResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ps__gameCurrentPlayingPlayersResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ps__gameList
#define SOAP_TYPE_ps__gameList (46)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ps__gameList(struct soap*, struct ps__gameList *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ps__gameList(struct soap*, const struct ps__gameList *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ps__gameList(struct soap*, const char*, int, const struct ps__gameList *, const char*);
SOAP_FMAC3 struct ps__gameList * SOAP_FMAC4 soap_in_ps__gameList(struct soap*, const char*, struct ps__gameList *, const char*);

#ifndef soap_write_ps__gameList
#define soap_write_ps__gameList(soap, data) ( soap_begin_send(soap) || (soap_serialize_ps__gameList(soap, data), 0) || soap_put_ps__gameList(soap, data, "ps:gameList", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ps__gameList(struct soap*, const struct ps__gameList *, const char*, const char*);

#ifndef soap_read_ps__gameList
#define soap_read_ps__gameList(soap, data) ( soap_begin_recv(soap) || !soap_get_ps__gameList(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ps__gameList * SOAP_FMAC4 soap_get_ps__gameList(struct soap*, struct ps__gameList *, const char*, const char*);

#define soap_new_ps__gameList(soap, n) soap_instantiate_ps__gameList(soap, n, NULL, NULL, NULL)


#define soap_delete_ps__gameList(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ps__gameList * SOAP_FMAC2 soap_instantiate_ps__gameList(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ps__gameList(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ps__gameListResponse
#define SOAP_TYPE_ps__gameListResponse (45)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ps__gameListResponse(struct soap*, struct ps__gameListResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ps__gameListResponse(struct soap*, const struct ps__gameListResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ps__gameListResponse(struct soap*, const char*, int, const struct ps__gameListResponse *, const char*);
SOAP_FMAC3 struct ps__gameListResponse * SOAP_FMAC4 soap_in_ps__gameListResponse(struct soap*, const char*, struct ps__gameListResponse *, const char*);

#ifndef soap_write_ps__gameListResponse
#define soap_write_ps__gameListResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ps__gameListResponse(soap, data), 0) || soap_put_ps__gameListResponse(soap, data, "ps:gameListResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ps__gameListResponse(struct soap*, const struct ps__gameListResponse *, const char*, const char*);

#ifndef soap_read_ps__gameListResponse
#define soap_read_ps__gameListResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ps__gameListResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ps__gameListResponse * SOAP_FMAC4 soap_get_ps__gameListResponse(struct soap*, struct ps__gameListResponse *, const char*, const char*);

#define soap_new_ps__gameListResponse(soap, n) soap_instantiate_ps__gameListResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ps__gameListResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ps__gameListResponse * SOAP_FMAC2 soap_instantiate_ps__gameListResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ps__gameListResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ps__placeList
#define SOAP_TYPE_ps__placeList (42)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ps__placeList(struct soap*, struct ps__placeList *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ps__placeList(struct soap*, const struct ps__placeList *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ps__placeList(struct soap*, const char*, int, const struct ps__placeList *, const char*);
SOAP_FMAC3 struct ps__placeList * SOAP_FMAC4 soap_in_ps__placeList(struct soap*, const char*, struct ps__placeList *, const char*);

#ifndef soap_write_ps__placeList
#define soap_write_ps__placeList(soap, data) ( soap_begin_send(soap) || (soap_serialize_ps__placeList(soap, data), 0) || soap_put_ps__placeList(soap, data, "ps:placeList", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ps__placeList(struct soap*, const struct ps__placeList *, const char*, const char*);

#ifndef soap_read_ps__placeList
#define soap_read_ps__placeList(soap, data) ( soap_begin_recv(soap) || !soap_get_ps__placeList(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ps__placeList * SOAP_FMAC4 soap_get_ps__placeList(struct soap*, struct ps__placeList *, const char*, const char*);

#define soap_new_ps__placeList(soap, n) soap_instantiate_ps__placeList(soap, n, NULL, NULL, NULL)


#define soap_delete_ps__placeList(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ps__placeList * SOAP_FMAC2 soap_instantiate_ps__placeList(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ps__placeList(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ps__placeListResponse
#define SOAP_TYPE_ps__placeListResponse (41)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ps__placeListResponse(struct soap*, struct ps__placeListResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ps__placeListResponse(struct soap*, const struct ps__placeListResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ps__placeListResponse(struct soap*, const char*, int, const struct ps__placeListResponse *, const char*);
SOAP_FMAC3 struct ps__placeListResponse * SOAP_FMAC4 soap_in_ps__placeListResponse(struct soap*, const char*, struct ps__placeListResponse *, const char*);

#ifndef soap_write_ps__placeListResponse
#define soap_write_ps__placeListResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ps__placeListResponse(soap, data), 0) || soap_put_ps__placeListResponse(soap, data, "ps:placeListResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ps__placeListResponse(struct soap*, const struct ps__placeListResponse *, const char*, const char*);

#ifndef soap_read_ps__placeListResponse
#define soap_read_ps__placeListResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ps__placeListResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ps__placeListResponse * SOAP_FMAC4 soap_get_ps__placeListResponse(struct soap*, struct ps__placeListResponse *, const char*, const char*);

#define soap_new_ps__placeListResponse(soap, n) soap_instantiate_ps__placeListResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ps__placeListResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ps__placeListResponse * SOAP_FMAC2 soap_instantiate_ps__placeListResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ps__placeListResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ps__drinkList
#define SOAP_TYPE_ps__drinkList (38)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ps__drinkList(struct soap*, struct ps__drinkList *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ps__drinkList(struct soap*, const struct ps__drinkList *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ps__drinkList(struct soap*, const char*, int, const struct ps__drinkList *, const char*);
SOAP_FMAC3 struct ps__drinkList * SOAP_FMAC4 soap_in_ps__drinkList(struct soap*, const char*, struct ps__drinkList *, const char*);

#ifndef soap_write_ps__drinkList
#define soap_write_ps__drinkList(soap, data) ( soap_begin_send(soap) || (soap_serialize_ps__drinkList(soap, data), 0) || soap_put_ps__drinkList(soap, data, "ps:drinkList", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ps__drinkList(struct soap*, const struct ps__drinkList *, const char*, const char*);

#ifndef soap_read_ps__drinkList
#define soap_read_ps__drinkList(soap, data) ( soap_begin_recv(soap) || !soap_get_ps__drinkList(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ps__drinkList * SOAP_FMAC4 soap_get_ps__drinkList(struct soap*, struct ps__drinkList *, const char*, const char*);

#define soap_new_ps__drinkList(soap, n) soap_instantiate_ps__drinkList(soap, n, NULL, NULL, NULL)


#define soap_delete_ps__drinkList(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ps__drinkList * SOAP_FMAC2 soap_instantiate_ps__drinkList(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ps__drinkList(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ps__drinkListResponse
#define SOAP_TYPE_ps__drinkListResponse (37)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ps__drinkListResponse(struct soap*, struct ps__drinkListResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ps__drinkListResponse(struct soap*, const struct ps__drinkListResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ps__drinkListResponse(struct soap*, const char*, int, const struct ps__drinkListResponse *, const char*);
SOAP_FMAC3 struct ps__drinkListResponse * SOAP_FMAC4 soap_in_ps__drinkListResponse(struct soap*, const char*, struct ps__drinkListResponse *, const char*);

#ifndef soap_write_ps__drinkListResponse
#define soap_write_ps__drinkListResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ps__drinkListResponse(soap, data), 0) || soap_put_ps__drinkListResponse(soap, data, "ps:drinkListResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ps__drinkListResponse(struct soap*, const struct ps__drinkListResponse *, const char*, const char*);

#ifndef soap_read_ps__drinkListResponse
#define soap_read_ps__drinkListResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ps__drinkListResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ps__drinkListResponse * SOAP_FMAC4 soap_get_ps__drinkListResponse(struct soap*, struct ps__drinkListResponse *, const char*, const char*);

#define soap_new_ps__drinkListResponse(soap, n) soap_instantiate_ps__drinkListResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ps__drinkListResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ps__drinkListResponse * SOAP_FMAC2 soap_instantiate_ps__drinkListResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ps__drinkListResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ps__playerList
#define SOAP_TYPE_ps__playerList (34)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ps__playerList(struct soap*, struct ps__playerList *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ps__playerList(struct soap*, const struct ps__playerList *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ps__playerList(struct soap*, const char*, int, const struct ps__playerList *, const char*);
SOAP_FMAC3 struct ps__playerList * SOAP_FMAC4 soap_in_ps__playerList(struct soap*, const char*, struct ps__playerList *, const char*);

#ifndef soap_write_ps__playerList
#define soap_write_ps__playerList(soap, data) ( soap_begin_send(soap) || (soap_serialize_ps__playerList(soap, data), 0) || soap_put_ps__playerList(soap, data, "ps:playerList", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ps__playerList(struct soap*, const struct ps__playerList *, const char*, const char*);

#ifndef soap_read_ps__playerList
#define soap_read_ps__playerList(soap, data) ( soap_begin_recv(soap) || !soap_get_ps__playerList(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ps__playerList * SOAP_FMAC4 soap_get_ps__playerList(struct soap*, struct ps__playerList *, const char*, const char*);

#define soap_new_ps__playerList(soap, n) soap_instantiate_ps__playerList(soap, n, NULL, NULL, NULL)


#define soap_delete_ps__playerList(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ps__playerList * SOAP_FMAC2 soap_instantiate_ps__playerList(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ps__playerList(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ps__playerListResponse
#define SOAP_TYPE_ps__playerListResponse (33)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ps__playerListResponse(struct soap*, struct ps__playerListResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ps__playerListResponse(struct soap*, const struct ps__playerListResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ps__playerListResponse(struct soap*, const char*, int, const struct ps__playerListResponse *, const char*);
SOAP_FMAC3 struct ps__playerListResponse * SOAP_FMAC4 soap_in_ps__playerListResponse(struct soap*, const char*, struct ps__playerListResponse *, const char*);

#ifndef soap_write_ps__playerListResponse
#define soap_write_ps__playerListResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ps__playerListResponse(soap, data), 0) || soap_put_ps__playerListResponse(soap, data, "ps:playerListResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ps__playerListResponse(struct soap*, const struct ps__playerListResponse *, const char*, const char*);

#ifndef soap_read_ps__playerListResponse
#define soap_read_ps__playerListResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ps__playerListResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ps__playerListResponse * SOAP_FMAC4 soap_get_ps__playerListResponse(struct soap*, struct ps__playerListResponse *, const char*, const char*);

#define soap_new_ps__playerListResponse(soap, n) soap_instantiate_ps__playerListResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ps__playerListResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ps__playerListResponse * SOAP_FMAC2 soap_instantiate_ps__playerListResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ps__playerListResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ps__playerById
#define SOAP_TYPE_ps__playerById (30)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ps__playerById(struct soap*, struct ps__playerById *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ps__playerById(struct soap*, const struct ps__playerById *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ps__playerById(struct soap*, const char*, int, const struct ps__playerById *, const char*);
SOAP_FMAC3 struct ps__playerById * SOAP_FMAC4 soap_in_ps__playerById(struct soap*, const char*, struct ps__playerById *, const char*);

#ifndef soap_write_ps__playerById
#define soap_write_ps__playerById(soap, data) ( soap_begin_send(soap) || (soap_serialize_ps__playerById(soap, data), 0) || soap_put_ps__playerById(soap, data, "ps:playerById", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ps__playerById(struct soap*, const struct ps__playerById *, const char*, const char*);

#ifndef soap_read_ps__playerById
#define soap_read_ps__playerById(soap, data) ( soap_begin_recv(soap) || !soap_get_ps__playerById(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ps__playerById * SOAP_FMAC4 soap_get_ps__playerById(struct soap*, struct ps__playerById *, const char*, const char*);

#define soap_new_ps__playerById(soap, n) soap_instantiate_ps__playerById(soap, n, NULL, NULL, NULL)


#define soap_delete_ps__playerById(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ps__playerById * SOAP_FMAC2 soap_instantiate_ps__playerById(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ps__playerById(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ps__playerByIdResponse
#define SOAP_TYPE_ps__playerByIdResponse (29)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ps__playerByIdResponse(struct soap*, struct ps__playerByIdResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ps__playerByIdResponse(struct soap*, const struct ps__playerByIdResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ps__playerByIdResponse(struct soap*, const char*, int, const struct ps__playerByIdResponse *, const char*);
SOAP_FMAC3 struct ps__playerByIdResponse * SOAP_FMAC4 soap_in_ps__playerByIdResponse(struct soap*, const char*, struct ps__playerByIdResponse *, const char*);

#ifndef soap_write_ps__playerByIdResponse
#define soap_write_ps__playerByIdResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ps__playerByIdResponse(soap, data), 0) || soap_put_ps__playerByIdResponse(soap, data, "ps:playerByIdResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ps__playerByIdResponse(struct soap*, const struct ps__playerByIdResponse *, const char*, const char*);

#ifndef soap_read_ps__playerByIdResponse
#define soap_read_ps__playerByIdResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ps__playerByIdResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ps__playerByIdResponse * SOAP_FMAC4 soap_get_ps__playerByIdResponse(struct soap*, struct ps__playerByIdResponse *, const char*, const char*);

#define soap_new_ps__playerByIdResponse(soap, n) soap_instantiate_ps__playerByIdResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ps__playerByIdResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ps__playerByIdResponse * SOAP_FMAC2 soap_instantiate_ps__playerByIdResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ps__playerByIdResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_PointerToSOAP_ENV__Reason (64)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap*, const char *, int, struct SOAP_ENV__Reason *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason **, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Reason
#define soap_write_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Reason(soap, data), 0) || soap_put_PointerToSOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Reason
#define soap_read_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason **, const char*, const char*);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_PointerToSOAP_ENV__Detail (63)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap*, const char *, int, struct SOAP_ENV__Detail *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail **, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Detail
#define soap_write_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Detail(soap, data), 0) || soap_put_PointerToSOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Detail
#define soap_read_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail **, const char*, const char*);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code
#define SOAP_TYPE_PointerToSOAP_ENV__Code (57)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Code
#define soap_write_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Code(soap, data), 0) || soap_put_PointerToSOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Code
#define soap_read_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);

#endif

#ifndef SOAP_TYPE_xsd__string
#define SOAP_TYPE_xsd__string (8)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_xsd__string(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xsd__string(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__string(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_xsd__string(struct soap*, const char*, char **, const char*);

#ifndef soap_write_xsd__string
#define soap_write_xsd__string(soap, data) ( soap_begin_send(soap) || (soap_serialize_xsd__string(soap, data), 0) || soap_put_xsd__string(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__string(struct soap*, char *const*, const char*, const char*);

#ifndef soap_read_xsd__string
#define soap_read_xsd__string(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__string(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_xsd__string(struct soap*, char **, const char*, const char*);

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default__QName(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__QName(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);

#ifndef soap_write__QName
#define soap_write__QName(soap, data) ( soap_begin_send(soap) || (soap_serialize__QName(soap, data), 0) || soap_put__QName(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char *const*, const char*, const char*);

#ifndef soap_read__QName
#define soap_read__QName(soap, data) ( soap_begin_recv(soap) || !soap_get__QName(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);

#ifndef SOAP_TYPE_string
#define SOAP_TYPE_string (4)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_string(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);

#ifndef soap_write_string
#define soap_write_string(soap, data) ( soap_begin_send(soap) || (soap_serialize_string(soap, data), 0) || soap_put_string(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char *const*, const char*, const char*);

#ifndef soap_read_string
#define soap_read_string(soap, data) ( soap_begin_recv(soap) || !soap_get_string(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);

#ifndef SOAP_TYPE_std__vectorTemplateOfGameInformation
#define SOAP_TYPE_std__vectorTemplateOfGameInformation (26)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfGameInformation(struct soap*, std::vector<GameInformation >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfGameInformation(struct soap*, const std::vector<GameInformation >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfGameInformation(struct soap*, const char*, int, const std::vector<GameInformation >*, const char*);
SOAP_FMAC3 std::vector<GameInformation >* SOAP_FMAC4 soap_in_std__vectorTemplateOfGameInformation(struct soap*, const char*, std::vector<GameInformation >*, const char*);

#define soap_new_std__vectorTemplateOfGameInformation(soap, n) soap_instantiate_std__vectorTemplateOfGameInformation(soap, n, NULL, NULL, NULL)


#define soap_delete_std__vectorTemplateOfGameInformation(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::vector<GameInformation > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfGameInformation(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfGameInformation(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPlaceInformation
#define SOAP_TYPE_std__vectorTemplateOfPlaceInformation (23)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPlaceInformation(struct soap*, std::vector<PlaceInformation >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPlaceInformation(struct soap*, const std::vector<PlaceInformation >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPlaceInformation(struct soap*, const char*, int, const std::vector<PlaceInformation >*, const char*);
SOAP_FMAC3 std::vector<PlaceInformation >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPlaceInformation(struct soap*, const char*, std::vector<PlaceInformation >*, const char*);

#define soap_new_std__vectorTemplateOfPlaceInformation(soap, n) soap_instantiate_std__vectorTemplateOfPlaceInformation(soap, n, NULL, NULL, NULL)


#define soap_delete_std__vectorTemplateOfPlaceInformation(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::vector<PlaceInformation > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPlaceInformation(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPlaceInformation(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfxsd__string
#define SOAP_TYPE_std__vectorTemplateOfxsd__string (21)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfxsd__string(struct soap*, std::vector<char * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfxsd__string(struct soap*, const std::vector<char * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfxsd__string(struct soap*, const char*, int, const std::vector<char * >*, const char*);
SOAP_FMAC3 std::vector<char * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfxsd__string(struct soap*, const char*, std::vector<char * >*, const char*);

#define soap_new_std__vectorTemplateOfxsd__string(soap, n) soap_instantiate_std__vectorTemplateOfxsd__string(soap, n, NULL, NULL, NULL)


#define soap_delete_std__vectorTemplateOfxsd__string(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::vector<char * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfxsd__string(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfxsd__string(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfDrinkInformation
#define SOAP_TYPE_std__vectorTemplateOfDrinkInformation (19)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfDrinkInformation(struct soap*, std::vector<DrinkInformation >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfDrinkInformation(struct soap*, const std::vector<DrinkInformation >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfDrinkInformation(struct soap*, const char*, int, const std::vector<DrinkInformation >*, const char*);
SOAP_FMAC3 std::vector<DrinkInformation >* SOAP_FMAC4 soap_in_std__vectorTemplateOfDrinkInformation(struct soap*, const char*, std::vector<DrinkInformation >*, const char*);

#define soap_new_std__vectorTemplateOfDrinkInformation(soap, n) soap_instantiate_std__vectorTemplateOfDrinkInformation(soap, n, NULL, NULL, NULL)


#define soap_delete_std__vectorTemplateOfDrinkInformation(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::vector<DrinkInformation > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfDrinkInformation(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfDrinkInformation(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPlayerInformation
#define SOAP_TYPE_std__vectorTemplateOfPlayerInformation (16)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPlayerInformation(struct soap*, std::vector<PlayerInformation >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPlayerInformation(struct soap*, const std::vector<PlayerInformation >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPlayerInformation(struct soap*, const char*, int, const std::vector<PlayerInformation >*, const char*);
SOAP_FMAC3 std::vector<PlayerInformation >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPlayerInformation(struct soap*, const char*, std::vector<PlayerInformation >*, const char*);

#define soap_new_std__vectorTemplateOfPlayerInformation(soap, n) soap_instantiate_std__vectorTemplateOfPlayerInformation(soap, n, NULL, NULL, NULL)


#define soap_delete_std__vectorTemplateOfPlayerInformation(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::vector<PlayerInformation > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPlayerInformation(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPlayerInformation(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfStringDoublePair
#define SOAP_TYPE_std__vectorTemplateOfStringDoublePair (14)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfStringDoublePair(struct soap*, std::vector<StringDoublePair >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfStringDoublePair(struct soap*, const std::vector<StringDoublePair >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfStringDoublePair(struct soap*, const char*, int, const std::vector<StringDoublePair >*, const char*);
SOAP_FMAC3 std::vector<StringDoublePair >* SOAP_FMAC4 soap_in_std__vectorTemplateOfStringDoublePair(struct soap*, const char*, std::vector<StringDoublePair >*, const char*);

#define soap_new_std__vectorTemplateOfStringDoublePair(soap, n) soap_instantiate_std__vectorTemplateOfStringDoublePair(soap, n, NULL, NULL, NULL)


#define soap_delete_std__vectorTemplateOfStringDoublePair(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::vector<StringDoublePair > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfStringDoublePair(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfStringDoublePair(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfStringIntPair
#define SOAP_TYPE_std__vectorTemplateOfStringIntPair (13)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfStringIntPair(struct soap*, std::vector<StringIntPair >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfStringIntPair(struct soap*, const std::vector<StringIntPair >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfStringIntPair(struct soap*, const char*, int, const std::vector<StringIntPair >*, const char*);
SOAP_FMAC3 std::vector<StringIntPair >* SOAP_FMAC4 soap_in_std__vectorTemplateOfStringIntPair(struct soap*, const char*, std::vector<StringIntPair >*, const char*);

#define soap_new_std__vectorTemplateOfStringIntPair(soap, n) soap_instantiate_std__vectorTemplateOfStringIntPair(soap, n, NULL, NULL, NULL)


#define soap_delete_std__vectorTemplateOfStringIntPair(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::vector<StringIntPair > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfStringIntPair(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfStringIntPair(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

/* End of soapH.h */
